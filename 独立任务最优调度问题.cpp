//机器A和B对每个任务的处理时间不一样，为ai,bi，有好多任务，可以放A也能放B，求最短调度

//分析：当完成k个作业，设机器A花费了x时间，机器B所花费时间的最小值肯定是x的一个函数，设F[k][x]表示机器B所花费时间的最小值。
//则F[k][x] = Min{ F[k - 1][x] + b[k], F[k - 1][x - a[k]] }；
//其中F[k - 1][x] + b[k]表示第k个作业由机器B来处理（完成k - 1个作业时机器A花费的时间仍是x），
//F[k - 1][x - a[k]]表示第k个作业由机器A处理（完成k - 1个作业时机器A花费的时间是x - a[k]）。
//
//那么单个点对较大值Max(x, F[k][x])，表示此时（即机器A花费x时间的情况下）所需要的总时间。
//而机器A花费的时间x是变化的，即x = 0, 1, 2……x(max)，（理论上x的取值是离散的，但为编程方便，设为整数连续的）
//由此构成了点对较大值序列。要求整体时间最短，取这些点对较大值序列中最小的即是。