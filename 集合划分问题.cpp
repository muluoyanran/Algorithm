////n个元素的集合{ 1,2,....,n }可以划分为若干个非空子集。例如，当 n = 4 时，集合{ 1，2，3，4 }可以划分为 15 个不同的非空子集如下：
////{ {1}，{2}，{3}，{4} }，
////{ {1，2}，{3}，{4} }，
////{ {1，3}，{2}，{4} }，
////{ {1，4}，{2}，{3} }，
////{ {2，3}，{1}，{4} }，
////{ {2，4}，{1}，{3} }，
////{ {3，4}，{1}，{2} }，
////{ {1，2}，{3，4} }，
////{ {1，3}，{2，4} }，
////{ {1，4}，{2，3} }，
////{ {1，2，3}，{4} }，
////{ {1，2，4}，{3} }，
////{ {1，3，4}，{2} }，
////{ {2，3，4}，{1} }，
////{ {1，2，3，4} }
////其中，集合{ {1，2，3，4} }由 1 个子集组成；
////集合{ {1，2}，{3，4} }，{ {1，3}，{2， 4} }，{ {1，4}，{2，3} }，{ {1，2，3}，{4} }，{ {1，2，4}，{3} }，{ {1，3，4}，{2} }，{ {2， 3，4}，{1} }由 2 个子集组成；
////集合{ {1，2}，{3}，{4} }，{ {1，3}，{2}，{4} }，{ {1，4}， {2}，{3} }，{ {2，3}，{1}，{4} }，{ {2，4}，{1}，{3} }，{ {3，4}，{1}，{2} }由 3 个子集组 成；
////集合{ {1}，{2}，{3}，{4} }由 4 个子集组成。
////给定正整数 n 和 m，计算出 n 个元素的集合{ 1,2,...,n }可以划分为多少个不同的由 m个非空子集组成的集合

////div[i][j] = sum(div[i-1][j-1], j * div[i-1][j])

//#include <iostream>
//using namespace std;
//
//int divide(int n, int m);
//
//int main()
//{
//	int n, m;
//	cin >> n >> m;
//	cout << divide(n, m) << endl;
//	return 0;
//}
//
//int divide(int n, int m)
//{
//	if (n == m || m == 1)
//		return 1;
//	else
//		return divide(n - 1, m - 1) + divide(n - 1, m) * m;
//}