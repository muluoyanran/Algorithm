////给定一个自然数n，由n开始可以依次产生半数集set(n)中的数如下。
////(1) n∈set(n)；
////(2) 在n的左边加上一个自然数，但该自然数不能超过最近添加的数的一半；
////(3) 按此规则进行处理，直到不能再添加自然数为止。 
////例如，set(6) = { 6,16,26,126,36,136 }。半数集set(6)中有6 个元素。 注意半数集是多重集。

//#include <iostream>
//using namespace std;
//
///*******问题分析*******/
//// 1、给定一个数n，从1到n/2依次添加
//void addNum(int n);
//// 2、每添加一个新的则进行一次递归，计数
//int num = 1; // 自己直接在里面
//
///*******程序逻辑*******/
////int main()
////{
////	int n;
////	cin >> n;
////	addNum(n);
////	
////	cout << num;
////
////	return 0;
////}
//
///*******函数实现*******/
//void addNum(int n)
//{
//	// 如果是1，递归出口
//	if (n == 1)
//		return;
//	for (int i = 1; i <= n / 2; ++i)
//	{
//		++num;
//		addNum(i);
//	}
//}
